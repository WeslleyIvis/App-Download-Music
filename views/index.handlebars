
<main class="content">
    <form id="formulario">
        <input type="text" name="url" id="url" placeholder="Youtube URL" required>
        <select name="types" id="type">
            <option value="mp3">MP3</option>
            <option value="mp4">MP4</option>
        </select>
    <button type="submit">FIND</button>
    </form>

    <div id="content"></div>    
</main>

<script>
 
    class creatDownload {
        constructor(data, boxContent) {
            this.data = data;
            this.boxContent = boxContent[0];
            this.url = this.data[1].video_url
            this.title = this.data[1].title
            this.embedVideo = this.data[1].embed
        }

        creatContent(container) {
            // Limpa o conteúdo quando receber uma nova requisição
            if(container.childNodes.length) {
                container.innerHTML = ''
            }

            this.video(this.embedVideo, this.boxContent)
            this.descrition();
            this.download()
        }

        video(embedConfig, container) {
            const iframe = document.createElement('iframe');
            iframe.src = embedConfig.iframeUrl;
            iframe.classList.add('yt-iframe');
            iframe.setAttribute('frameborder', 0);
            container.appendChild(iframe);
        }

        download() {
            const button = document.createElement('button')
            button.innerText = 'Download';
            button.classList.add('download')
            button.addEventListener('click', async () => {               
                await fetch('http://localhost:3000/dl').then(r => {
                    if (r.ok) return r.blob();
                }).then(blob => {
                    const url = URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = `${this.title}.${this.data[2]}`;
                    document.body.appendChild(a)
                    a.click();
                    URL.revokeObjectURL(url);
                    this.boxContent.innerHTML = ''
                })
            })
            this.boxContent.appendChild(button)          
        }

        descrition() {
            const title = document.createElement('span');
            title.innerText = this.title;
            title.classList.add('title')
            this.boxContent.appendChild(title)
        }

        init() {
            this.creatContent(this.boxContent)  
        }
    }

    $(document).ready(() => {
        $('#formulario').submit(function (event) {
            event.preventDefault();
                $.ajax({
                    url: '/api/ytdl',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: (data) =>  {
                        console.log(data)
                        const createApp = new creatDownload(data.data, $('#content'))
                        createApp.init()
                }
            });
        });
    });


    

</script> 